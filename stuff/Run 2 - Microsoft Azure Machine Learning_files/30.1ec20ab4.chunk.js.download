(this["webpackJsonp@mlworkspace/portal"]=this["webpackJsonp@mlworkspace/portal"]||[]).push([[30],{"AE/o":function(e,t,a){"use strict";a.d(t,"b",(function(){return m})),a.d(t,"a",(function(){return p}));var n,r=a("VtSi"),i=a.n(r),o=a("QsI/"),s=a("zjfJ"),l=a("749O"),d=a("Cx9C"),u=a("nsO7"),c=a("LRnI"),m=c,g=(n={},Object(s.a)(n,l.a.En,(function(){return Promise.resolve(c)})),Object(s.a)(n,l.a.QpsPloc,(function(){return Promise.resolve(d.a.pseudolocalizeStrings(c))})),Object(s.a)(n,l.a.Es,(function(){return a.e(433).then(a.t.bind(null,"W/8n",3))})),Object(s.a)(n,l.a.Cs,(function(){return a.e(431).then(a.t.bind(null,"bNYW",3))})),Object(s.a)(n,l.a.De,(function(){return a.e(432).then(a.t.bind(null,"cnOB",3))})),Object(s.a)(n,l.a.Fr,(function(){return a.e(434).then(a.t.bind(null,"jnQP",3))})),Object(s.a)(n,l.a.It,(function(){return a.e(436).then(a.t.bind(null,"xzlh",3))})),Object(s.a)(n,l.a.Ja,(function(){return a.e(437).then(a.t.bind(null,"VgwY",3))})),Object(s.a)(n,l.a.Ko,(function(){return a.e(438).then(a.t.bind(null,"O77Z",3))})),Object(s.a)(n,l.a.PtBR,(function(){return a.e(441).then(a.t.bind(null,"XAkj",3))})),Object(s.a)(n,l.a.Ru,(function(){return a.e(443).then(a.t.bind(null,"bD9k",3))})),Object(s.a)(n,l.a.ZhHans,(function(){return a.e(446).then(a.t.bind(null,"saPS",3))})),Object(s.a)(n,l.a.ZhHant,(function(){return a.e(447).then(a.t.bind(null,"XcHR",3))})),Object(s.a)(n,l.a.Nl,(function(){return a.e(439).then(a.t.bind(null,"jHDz",3))})),Object(s.a)(n,l.a.Hu,(function(){return a.e(435).then(a.t.bind(null,"89as",3))})),Object(s.a)(n,l.a.PtPT,(function(){return a.e(442).then(a.t.bind(null,"lwSi",3))})),Object(s.a)(n,l.a.Pl,(function(){return a.e(440).then(a.t.bind(null,"WEoQ",3))})),Object(s.a)(n,l.a.Sv,(function(){return a.e(444).then(a.t.bind(null,"f11i",3))})),Object(s.a)(n,l.a.Tr,(function(){return a.e(445).then(a.t.bind(null,"iM+z",3))})),n),p={loadLocale:function(){var e=Object(o.a)(i.a.mark((function e(t){var a;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g[t]();case 2:a=e.sent,m=Object(u.merge)({},c,a);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}},LRnI:function(e){e.exports=JSON.parse('{"CancelRun":{"ButtonText":"Cancel","CancellingText":"Cancelling","ConfirmationDialog_SubText":"Are you sure you want to cancel run","ConfirmationDialog_Title":"Cancel run?"},"ChildRun":{"Details":{"AlgorithmName":"Algorithm name","CreatedTime":"Created time","DeployStatus":"Deploy status","Duration":"Duration","Header":"Model details","InputDatasets":"Input datasets","Iteration":"Iteration","Metrics":{"GetData":{"ServiceError":"Error getting run metrics"},"Title":"Metrics"},"ModelSummary":"Model summary","PaperCutHeader":"Details","PrimaryMetric":"Primary metric","RegisteredModels":"Registered models","RunDetails":"Run details","RunId":"Run ID","RunMetrics":{"Header":"Run Metrics"},"Sampling":"Sampling","SamplingInfo":"The percentage of input training data that was used to train the model","Score":"Score","Status":"Status","ViewOtherMetrics":"View all other metrics"},"Explanations":{"CreatingMessage":"Creating the explainability run"},"Model":{"Header":"Model"},"NewExplainRun":"Explain model","NewTestModelRun":"Test model","PipelineGraph":{"Header":"Pipeline graph"},"Transformation":{"ArialLabel":"Transformation chart","GetData":{"ServiceError":"Error getting transformation data"},"Header":"Transformation","ResourceName":"Transformation"}},"Common":{"Button":{"Close":"Close","Info":"Info"},"Error":"Error","Loading":"Loading\u2026","NoMetrics":"No metrics","NotAvailable":"N/A","PrimaryMetric":"Primary metric","Yes":"Yes"},"Components":{"BaseComponent":{"GetDataError":"Error refreshing data"},"ComputeSelector":{"Callout1":"A training cluster is required to execute the run in Azure. You can use your existing Azure ML training cluster, or create a new one. You can view your existing resources in the \'Compute\' tab. Note that this compute resource has its own costs, refer to the ","Callout2":"for more information.","ComputeUnusable":" (Unusable)","LabelText":"Select compute cluster","LinkText":"pricing details","NoUsableCompute":"Selected compute is not usable","Placeholder":"Select a compute\u2026","RequiredValidation":"Compute cluster is required"},"DatasetDropdown":{"HeaderLabel":{"DatasetName":"Name","LastUpdated":"Last updated"},"LabelText":"Select a dataset","Placeholder":"Select a dataset..","RequiredValidation":"Dataset is required"},"DatasetInput":{"CreateQuestion":"Don\'t see the dataset you want?"}},"ErrorCodes":{"UserError":{"Auth":{"Authorization":{"DatasetAuthorizationFailure":"Service does not have permission to access the data file. Ensure data correctness and availability."}},"BadArgument":{"ArgumentInvalid":{"AllNonTFAlgorithmsAreBlackListedWithoutTF":"All non-Tensorflow models are blacklisted. Enable tensorflow before training.","DatasetIncorrectState":"Service failed to retrieve the data. Ensure data correctness and availability.","DatasetInvalidPath":"The data file does not exists. Ensure data correctness and availability."},"ArgumentMismatch":{"TimeColumnNameInGrainColumnNames":"Columns listed in the \u201cTime series identifier(s)\u201d cannot be the same as column selected in \u201cTime column\u201d. Remove the time column from the \u201cTime series identifier(s)\u201d list."},"ArgumentOutOfRange":{"MaxConcurrentIterationsLargerThanMaxNode":"Max concurrent iterations is larger than max node of compute."}},"BadData":{"EmptyData":{"DatasetEmptyDatafile":"The input data is empty. Ensure data correctness and availability.","_DefaultMessage":"The input data is empty. Ensure data correctness and availability."},"InvalidData":{"AllValuesUnique":"For a classification task, more than one instance per class must be present in the target column.","DuplicateTimeIndex":"Timeseries found duplicated index in time column.","RegressionNotNumerical":"The regression task type required a numerical target column. If your target column is numerical, when registering the dataset in the \u201cDatasets\u201d tab, on the \u201cSchema\u201d section of \u201c+ Create dataset\u201d, make sure that the type of your target column is either \u201cInteger\u201d or \u201cDecimal\u201d.","SingleClass":"For a classification task, the y input needs at least two classes of labels."},"InvalidDimension":{"SmallData":"There is not enough training data available."},"MissingData":{"DataHasMissingLabels":"All entries in your data are NaN. To run automated ML, make sure that there are some entries which are not NaN."}},"ConnectionFailure":{"DatasetInputDataFetchFailed":"Service failed to retrieve the data. Ensure data correctness and availability.","DatasetNoConnection":"Service failed to connect the database provided. Ensure data correctness and availability."},"NotSupported":{"DatasetUnsupportedFile":"The data file is not supported by DataPrep."},"ValidationError":{"BadArgument":{"AllNonTFAlgorithmsAreBlackListedWithoutTF":"All non-Tensorflow models are blacklisted, please enable tensorflow before training.","InvalidParameterCombination":{"TimeColumnNameInGrainColumnNames":"Columns listed in the \u201cTime series identifier(s)\u201d cannot be the same as column selected in \u201cTime column\u201d. Remove the time column from the Time series identifier(s)\u201d list."}},"ScenarioNotSupportedError":{"DataValidation":{"CannotAccessData":"Data cannot be accessed.","EmptyData":{"NoData":"There is no data available. To run automated ML, make sure that the input data is not empty."},"InvalidColumnName":{"ReservedColumnNameConflict":"One of your column names is a reserved name. To run automated ML, make sure that none of your columns are named: _automl_dummy_group_col, _automl_original_order_col, _automl_dummy_grain_col, _automl_target_col."},"InvalidDataConfigCombination":{"RegressionNotNumerical":"The regression task type required a numerical target column. If your target column is numerical, when registering the dataset in the \u201cDatasets\u201d tab, on the \u201cSchema\u201d section of \u201c+ Create dataset\u201d, make sure that the type of your target column is either \u201cInteger\u201d or \u201cDecimal\u201d."},"InvalidDataContent":{"AllValueMissing":"All entries in your data are NaN. To run automated ML, make sure that there are some entries which are not NaN.","AllValuesUnique":"For a classification task, more than one instance per class must be present in the target column.","DuplicateTimeIndex":"There are duplicate time series found in your data. To run automated ML, specify each time series by putting the column name in in the \u201cGroup by\u201d setting of the \u201cSelect task and settings\u201d section when creating a new automated ML run.","SingleClass":"Your target column needs at least two samples of each label for training."},"InvalidDimension":{"SmallDataSet":"There is not enough training data available."}}}}}},"ExplainModel":{"ButtonText":"Explain model","Creating":{"Text":"Creating model explainability run"},"Message":{"Error":{"Title":"Error creating explainability run"},"Success":{"Description":"Explainability run successfully created. You can view the run status in the \\"Child runs\\" tab. Once the run is complete, the explainability tab will populate with your explanations.","Title":"Success"}},"Panel":{"Form":{"AssetNameValidation":{"Regex":"Asset name must be 3-36 characters, start with a letter or a number, and can only contain letters, numbers, underscores, and dashes.","Required":"Asset name is a required field"},"Cancel":"Cancel","ComputeDropdown":{"CalloutDescription":"A cloud compute resource is required to run the experiment in Azure. You can use your existing Azure ML compute resource, or create a new one. Note that compute resource has its own costs, refer to the","CalloutLinkLabel":" pricing details","Label":"Select compute target","UnusableOption":" (Unusable)","Validation":"Compute target is a required field"},"Create":"Create","ExplainabilityAssetName":"Explainability asset name"},"GetData":{"ServiceError":"Error getting computes"}}},"Form":{"Upload":"upload"},"MetricNames":{"AUC_macro":"AUC macro","AUC_micro":"AUC micro","AUC_weighted":"AUC weighted","accuracy":"Accuracy","average_precision_score_macro":"Average precision score macro","average_precision_score_micro":"Average precision score micro","average_precision_score_weighted":"Average precision score weighted","balanced_accuracy":"Balanced accuracy","explained_variance":"Explained variance","f1_score_macro":"F1 score macro","f1_score_micro":"F1 score micro","f1_score_weighted":"F1 score weighted","log_loss":"Log loss","matthews_correlation":"Matthews correlation","mean_absolute_error":"Mean absolute error","mean_absolute_percentage_error":"Mean absolute percentage error","median_absolute_error":"Median absolute error","norm_macro_recall":"Norm macro recall","normalized_mean_absolute_error":"Normalized mean absolute error","normalized_median_absolute_error":"Normalized median absolute error","normalized_root_mean_squared_error":"Normalized root mean squared error","normalized_root_mean_squared_log_error":"Normalized root mean squared log error","precision_score_macro":"Precision score macro","precision_score_micro":"Precision score micro","precision_score_weighted":"Precision score weighted","r2_score":"R2 score","recall_score_macro":"Recall score macro","recall_score_micro":"Recall score micro","recall_score_weighted":"Recall score weighted","root_mean_squared_error":"Root mean squared error","root_mean_squared_log_error":"Root mean squared log error","spearman_correlation":"Spearman correlation","weighted_accuracy":"Weighted accuracy"},"Model":{"CondaFile":{"AutoGenerate":"Auto generate","CondaFile":"Environment script","CondaFileDescription":"The environment script is required to generate the image for deployment. It contains the Conda dependencies required to run the web service.","CondaFileRequired":"Conda environment file is required.","DownloadAutoGenerate":"Download auto generated conda environment script"},"DeployStatus":{"DeployedSince":"Deployed since","DeployedStart":"Last deployment started on","DownloadLogs":{"GetData":{"ServiceError":"Error downloading logs"},"LinkText":"See logs for more info"},"GetData":{"ServiceError":"Error getting deployment status"},"NoDeployment":"No deployment yet","ScoreUri":"Score URI","ViewOperationLog":"View operation log"},"ModelDeploy":{"DeployBestModel":"Deploy best model","DeployCommandBarButton":"Deploy","DeployModel":"Deploy model","Message":{"Success":{"Description":"Model deployment is successfully triggered","Title":"Success"}}},"ModelDownload":{"Download":"Download","DownloadingTitle":"Downloading model {model_name} from run {run_number}","FileDownloaded":"{file_name} downloaded.","FileDownloading":"Downloading {file_name}, {percentage} completed.","GetData":{"ServiceError":"Error getting model data"},"GettingFileList":"Getting file list","NoModel":"No model available.","PackingUpDescription":"Packing up files","WaitingForDownloadingDescription":"Waiting for files to be downloaded"},"ModelList":{"NoRegistration":"No registration yet"},"ModelSection":{"LearnMoreLink":"Learn more about deploying models "},"ModelSummary":{"GetData":{"ServiceError":"Error getting model summary data"}},"ScoringScript":{"AutoGenerate":"Auto generate","DownloadAutoGenerate":"Download auto generated scoring script","ScoringFile":"Scoring file","ScoringScript":"Scoring script","ScoringScriptDescription":"The scoring script is required to generate the image for deployment. It contains the code to do the predictions on input data.","ScoringScriptRequired":"Scoring script is required."}},"OuterErrorCodes":{"Error":"Error"},"ParentRun":{"DataGuardrails":{"AdditionalDetails_Collapsed":"View additional details","AdditionalDetails_Expanded":"Hide additional details","AdditionalDetails_Parameters":"Additional details","Close":"Close","Description":"Description","GetData":{"ServiceError":"Error getting data guardrails"},"GuardrailStatus":{"alerted":"Alerted","done":"Done","fixed":"Fixed","passed":"Passed"},"Header":"Data guardrails","HelpMessage":"Data guardrails are run by Automated ML when automatic featurization is enabled. This is a sequence of checks over the input data to ensure high quality data is being used to train model.","Messages":{"_class_balancing":{"additionalDetails":"Imbalanced data can lead to a falsely perceived positive effect of a model\'s accuracy because the input data has bias towards one class.","learnMoreMessage":"Learn more about imbalanced data.","name":"Class balancing detection","parameters":{"name_of_smallest_class":{"name":"Name/Label of the smallest class"},"num_of_samples":{"name":"Number of samples in the training data"},"size_of_smallest_class":{"name":"Size of the smallest class"}},"states":{"alerted":"Imbalanced classes were detected in your inputs.","passed":"Your inputs were analyzed, and all classes are balanced in your training data."}},"_cross_validation":{"additionalDetails":"Each iteration of the trained model was validated through cross-validation.","learnMoreMessage":"Learn more about validation data.","name":"Validation split handling","parameters":{"number_of_folds":{"name":"Cross validation fold count"}},"states":{"done":"The input data has been split for validation to improve model performance."}},"_detect_high_cardinal_feature":{"additionalDetails":"High cardinality features refer to columns that contain a large percentage of unique values.\\nThe table below shows which inputs were featurized as either Text or Categorical Hash features.","learnMoreMessage":"Learn more about high cardinality feature detection.","name":"High cardinality feature detection","parameters":{"column_name":{"name":"Column name"},"content_type":{"name":"Column content type","values":{"categorical_hash":"Categorical hash","text":"Text"}}},"states":{"done":"High cardinality features were detected in your inputs and handled.","passed":"Your inputs were analyzed, and no high cardinality features were detected."}},"_lags_features":{"additionalDetails":"","learnMoreMessage":"Learn more about time series forecasting configurations.","name":"Memory issues detection","states":{"fixed":"The selected horizon and lag values were analyzed and will potentially cause your experiment to run out of memory. The lag has been turned off. Please either increase the amount of memory or reduce the horizon value.","passed":"The selected horizon and lag values were analyzed, and no potential memory issues were detected."}},"_lookback_features":{"additionalDetails":"","learnMoreMessage":"Learn more about time series forecasting configurations.","name":"Memory issues detection","states":{"fixed":"The selected horizon, lag and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The lag and rolling window have been turned off. Please either increase the amount of memory or reduce the horizon value.","passed":"The selected horizon, lag and rolling window values were analyzed, and no potential memory issues were detected."}},"_missing_featurization_columns":{"additionalDetails":"The featurization customization config columns should be found in the input dataset. If some of these columns are not found, Automated ML will neglect those settings.","learnMoreMessage":"Learn more about missing columns for featurization.","name":"Missing columns for featurization","parameters":{"column_name":{"name":"Column name"},"featurization_config_scenario":{"name":"Featurization config scenario","values":{"column_purposes":"Column purposes","drop_columns":"Drop columns","transformer_parameters":"Transformer parameters"}}},"states":{"alerted":"Automated ML detected that columns specified for featurization configuration are missing from the input dataset. To continue with training, these featurization configurations have been dropped.","passed":"All columns specified for customized featurization were found in the input dataset."}},"_missing_value":{"additionalDetails":"","learnMoreMessage":"Learn more about missing value imputation.","name":"Missing feature values imputation","parameters":{"column_name":{"name":"Column name"},"imputation_type":{"name":"Imputation type","values":{"mean":"Mean","mode":"Mode"}},"missing_value_count":{"name":"Missing value count"}},"states":{"done":"Missing feature values were detected in your training data, and imputed. If the missing values are expected, let the run complete. Otherwise cancel the current run and use a script to customize the handling of missing feature values that may be more appropriate based on the data type and business requirement.","fixed":"The training data had the following missing values which were resolved. Please review your data source for data quality issues and possibly filter out the rows with these missing values. If the missing values are expected, you can either accept the above imputation, or implement your own custom imputation that may be more appropriate based on the data type and business process.","passed":"No feature missing values were detected in the training data."}},"_rolling_window_features":{"additionalDetails":"","learnMoreMessage":"Learn more about time series forecasting configurations.","name":"Memory issues detection","states":{"fixed":"The selected horizon and rolling window values were analyzed and will potentially cause your experiment to run out of memory. The rolling window has been turned off. Please either increase the amount of memory or reduce the horizon value.","passed":"The selected horizon and rolling window values were analyzed, and no potential memory issues were detected."}},"_timeseries_aggregation":{"additionalDetails":"","learnMoreMessage":"Learn more about data preparation for time-series aggregation.","name":"Time series aggregation","parameters":{"aggregation_function":{"name":"Aggregation function"},"series_freq":{"name":"Frequency"}},"states":{"fixed":"The data was aggregated to comply with the user provided frequency.","passed":"The data set frequency is aligned with to the user specified frequency. No aggregation was performed.."}},"_timeseries_regularity":{"additionalDetails":"The table below contains the data points which do not align with the detected frequency and were removed from the dataset.","learnMoreMessage":"Learn more about data preparation for time-series forecasting.","name":"Frequency detection","states":{"done":"The time series was analyzed and data points that do not align with the detected frequency were detected. These data points were removed from the data set.","passed":"The time series was analyzed, all data points are aligned with detected frequency."}},"_timeseries_short_series_handling":{"additionalDetails":"Each series must have enough data points to successfully train a model. To avoid failures on these short series automated ML will drop these series, or pad them by adding data points to the beginning of each of the series. If a series is dropped for training then a model will not produce predictions for those series.","learnMoreMessage":"Learn more about short series handling.","name":"Short series handling","parameters":{"series_dropped":{"name":"Number of series dropped"},"series_padded":{"name":"Number of series padded"}},"states":{"fixed":"Automated ML detected that some series did not contain enough data points to train a model. To continue with training, these short series have been dropped or padded.","passed":"Automated ML detected enough data points for each series in the input data to continue with training."}},"_train_test_split":{"additionalDetails":"The input data has been split into a training set and a validation set for validation of the model.","learnMoreMessage":"Learn more about validation data.","name":"Validation split handling","parameters":{"dataset":{"name":"Dataset","values":{"test":"Test dataset","train":"Training dataset"}},"percentage":{"name":"Percentage"},"row_counts":{"name":"Row counts"}},"states":{"done":"The input data has been split into a training dataset and a validation dataset for validation of the model. The validation dataset is generated to improve model performance."}}},"ResourceName":"guardrails","Status":"Status","Type":"Type"},"Details":{"AlgorithmName":"Algorithm name","DeploymentStatus":"Deployment status","Duration":"Duration","ExperimentName":"Experiment name","FeaturizeRunStatus":"Running featurization","GetData":{"ServiceError":"Error getting best child run data"},"Header":"Details","ManyModelsDataTags":"Many models properties","ManyModelsInputDataset":"Input dataset","ManyModelsInputFile":"Input file","ManyModelsSummary":{"GetData":{"ServiceError":"Error getting many models run"},"Header":"Many models summary"},"MetricValue":"Metric value","ModelName":"Model name","ModelSummary":"Best model summary","ModelTraining":"Model training","NotAvailable":"N/A","NotebookGenerationSummary":{"CreatedTime":"Created time","GetData":{"ServiceError":"Error getting notebook runs"},"Header":"Notebook generation summary","NoNotebookRuns":"Click \\"Generate notebook\\" to start a notebook run","NotebookLink":"Notebook link","Status":"Status"},"NotebookLink":"Notebook link","PrimaryMetric":"Primary metric","RecommendedModel":"Recommended model","RunDetails":"Run details","RunId":"Run ID","RunStatus":"Run status","RunSummary":"Run summary","SetupRunStatus":"Setting up the run","StartedOn":"Started on","TaskType":"Task type"},"ExperimentStatuses":{"BestRunExplainModel":"Generating explanation for best model","DatasetBalancing":"Balancing the dataset","DatasetCrossValidationSplit":"Splitting dataset\'s cross\u202fvalidation folds ","DatasetEvaluation":"Gathering dataset statistics","DatasetFeaturization":"Featurizing\u202fthe dataset","DatasetFeaturizationCompleted":"Dataset\u202ffeaturization\u202fcompleted","EngineeredFeatureExplanations":"Generating explanations of engineered features","FeaturesGeneration":"Generating dataset features","ForecastingAutoSetting":"Setting forecasting config","GetData":{"ServiceError":"Error getting experiment status"},"ModelExplanationDataSetSetup":"Setting up dataset for model explainability","ModelSelection":"Training child models","RawFeaturesExplanations":"Generating explanations of raw features","TextDNNTraining":"Featurizing text\u202fwith deep learning","TextDNNTrainingCompleted":"Text\u202ffeaturization with deep learning is completed"},"GenerateNotebook":{"ButtonText":"Generate notebook","Message":{"Error":{"Content":"An error occurred while trying to generate a notebook","Title":"Error generating notebook"},"Success":{"Content":"Notebook successfully generated with id","Title":"Success"}},"ProgressIndicator":{"Text":"The notebook is currently being generated. Once complete, you will be redirected to the generated notebook.","Title":"Creating"}},"LogsAndOutputs":{"GetData":{"ServiceError":"Error getting run logs"},"Header":"Outputs + logs","Messages":{"DownloadFileError":{"Title":"Error downloading file"},"GetContentError":{"Title":"Error getting file content"}}},"Models":{"Created":"Created","Duration":"Duration","GetData":{"ServiceError":"Error getting child runs"},"Header":"Models","ModelExplanation":"Explained","ModelExplanationNotSupported":"Not supported","Name":"Algorithm name","ResourceName":"models","Run":"Run","Sampling":"Sampling","Status":"Status","ViewModelExplanation":"View explanation"},"RunSettings":{"AdvancedSettings":{"AutomaticFeaturization":"Automatic featurization","BestPipeline":"Best pipeline","BlacklistedAlgorithms":"Blacklisted algorithms","BlockedAlgorithms":"Blocked algorithms","Close":"Close","ComputeTarget":"Compute target","Concurrency":"Concurrency","DataScript":"Data script","DroppedColumn":"Dropped column(s)","ExitCriterion":"Exit criterion","ExperimentExitScore":"Metric score threshold","ExplainModel":"Explain best model","ForecastingSettings":{"AutoDetectedStatus":"Auto ","AutoDetectedValue":"value : ","Countries":{"AR":"Argentina (AR)","AT":"Austria (AT)","AU":"Australia (AU)","BE":"Belgium (BE)","BR":"Brazil (BR)","BY":"Belarus (BY)","CA":"Canada (CA)","CH":"Switzerland (CH)","CO":"Colombia (CO)","CZ":"Czech (CZ)","DE":"Germany (DE)","DK":"Denmark (DK)","ES":"Spain (ES)","FI":"Finland (FI)","FR":"France (FR)","GB":"United Kingdom of Great Britain and Northern Ireland (GB)","HR":"Croatia (HR)","HU":"Hungary (HU)","IE":"Ireland (IE)","IM":"Isle of Man (IM)","IN":"India (IN)","IT":"Italy (IT)","JP":"Japan (JP)","MX":"Mexico (MX)","NL":"Netherlands (NL)","NO":"Norway (NO)","NZ":"New Zealand (NZ)","PL":"Poland (PL)","PT":"Portugal (PT)","SE":"Sweden (SE)","SI":"Slovenia (SI)","UA":"Ukraine (UA)","US":"United States (US)","ZA":"South Africa (ZA)"},"Header":"Additional forecasting settings","HolidayDetection":"Country or region for holidays","MaxHorizon":"Forecast horizon","TargetLags":"Forecast target lags","TargetRollingWindowSize":"Target rolling window size","TimeColumn":"Time column"},"Header":"Run settings","IncludedColumn":"Included column(s)","KFoldCrossValidation":"k-fold cross validation","MaxConcurrentIteration":"Max concurrent iteration","MetricOperation":"Metric operation","MonteCarloValidation":"Monte Carlo cross validation","NCrossValidations":"n cross validations","NullSetting":"--","NumberOfCrossValidation":"Number of cross validations","PreprocessingDisable":"Disabled","PreprocessingEnable":"Enabled","PrimaryMetric":"Primary metric","RunType":"Run type","TrainValidationSplit":"Train-validation split","TrainingTime":"Training time (hours) ","Validation":"Validation","ValidationSet":"Validation dataset","ValidationType":"Validation type","ViewAllRunSettings":"View all run settings"},"AutoMLRunType":"Automated ML","ComputeTarget":"Compute target","DeepLearning":"Deep learning","Disabled":"Disabled","Enabled":"Enabled","ExperimentName":"Experiment name","Forecasting":"Forecasting","Header":"Properties","ManyModels":{"Close":"Close","Header":"Many models properties","ViewManyModelProperties":"View all properties"},"PrimaryMetric":"Primary metric","RunId":"Run ID","RunType":"Run type","TaskType":"Task type"}},"RunDetails":{"BreadcrumbText":"Run Detail"},"RunSpans":{"automl.DataPrep":"Preparing input data","automl.Featurization":"Featurizing data","automl.FitPipeline":"Fitting pipeline","automl.LoadCachedData":"Loading cached data","automl.LoadOnnxConverter":"Loading ONNX converter","automl.LogMetrics":"Logging run metrics","automl.ModelExplaination":"Running model explain","automl.OnnxConversion":"Converting to ONNX model","automl.RunInitialization":"Initializing run","automl.SaveModelArtifacts":"Uploading run output metadata","automl.Training":"Training model","automl.Validation":"Validating model quality","automl.data-fetch":"Fetching input data","automl.data-validation":"Validating input data","automl.featurization-strategy":"Deciding featurization actions","containers.EnsureDockerContainerImage":"Checking docker image is cached","containers.loadDockerImageFromContainer":"Downloading Docker Image from blob container","containers.pullDockerImage":"Pulling docker image from registry","execute_with_context.enter":"Setting up dataset mount and download","execute_with_context.finalize":"Unmounting storage location and finalizing","execute_with_context.user_script":"Executing user script","execution.CreatingDockerImage":"Creating Docker image","execution.CreatingProjectSnapshot":"Creating source code snapshot","execution.InitializingRun":"Starting job monitor","execution.PreparingEnvironment":"Preparing Docker environment","execution.PreparingRun":"Preparing run and Azure env and dependencies","execution.SubmittingRun":"Validating run configuration","execution.SubmittingToCompute":"Submitting run to compute","execution.ValidatingPolicies":"Validating policies","guardrails":"Running data guardrails","job_prep.__main__":"Preparing job in cluster node","job_release.__main__":"Uploading output data","main.cleanUpJobEnvironment":"Stopping container and removing images","main.jobCleanup":"Unmounting file system and cleaning up job"},"TaskTypes":{"classification":"Classification","forecasting":"Forecasting","regression":"Regression"},"TestModel":{"ButtonText":"Test model","Creating":{"Text":"Creating model test run"},"Message":{"Error":{"Title":"Error creating test model run"},"Success":{"Description":"Test model run successfully created. You can view the run status in the \\"Testing\\" tab. Once the run is complete, the testing tab will populate with test results.","Title":"Success"}},"Panel":{"Form":{"AssetNameValidation":{"Regex":"Asset name must be 3-36 characters, start with a letter or a number, and can only contain letters, numbers, underscores, and dashes.","Required":"Asset name is a required field"},"Cancel":"Cancel","ComputeDropdown":{"CalloutDescription":"A cloud compute resource is required to run the experiment in Azure. You can use your existing Azure ML compute resource, or create a new one. Note that compute resource has its own costs, refer to the","CalloutLinkLabel":" pricing details","Label":"Select compute target","UnusableOption":" (Unusable)","Validation":"Compute target is a required field"},"Test":"Test","TestModelAssetName":"Test model asset name"},"GetData":{"ServiceError":"Error getting test data"}}},"TestModelTab":{"AlgorithmName":"Algorithm name","AlgorithmUsed":"Algorithm name: ","Created":"Created","DatasetUsed":"Dataset used","Header":"Test results","HelpMessageText":"Testing your model gives you the opportunity to see how your model performs before deployment. Whenever you test your model, your results will be displayed here.","PrimaryMetric":"Primary metric","ResourceName":"models","Run":"Run"}}')},zQeN:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var n=a("Czhu"),r=a("9fIP"),i=a("MMYH"),o=a("8K1b"),s=a("AqVP"),l=a("ERkP"),d=a("pGjv");function u(e){var t,a;return a=t=function(t){Object(o.a)(d,t);var a=Object(s.a)(d);function d(e){var t;return Object(r.a)(this,d),(t=a.call(this,e)).context=void 0,t}return Object(i.a)(d,[{key:"render",value:function(){var t=Object(n.a)({},this.props);return t.flightContext=t.flightContext||this.context,l.createElement(e,t)}}]),d}(l.Component),t.contextType=d.a,a}}}]);
//# sourceMappingURL=30.1ec20ab4.chunk.js.map